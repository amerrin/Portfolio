import handlers
from handlers import load_icon

#level base class for multiple levels
class Level:
    def getLayout(self):
        pass
    def getSprites(self):
        pass

#main level with 3 layouts as example
class level1(Level):
    def __init__(self):
        self.MANPAK = 2
        self.BLOCK = 1
        self.ORB = 0
        self.BEAST = 3
        self.BEASTSCARED = 4
        self.POWERUP = 5

	#array backed boards are created using numbers as identifies (see __init__)
	#board is returned to main level to be handled and drawn; this is an easy, simple way to separate board integrity from graphics
    def getLayoutModerate(self):
        return [[6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ,6, 6, 6, 6, 6, 6, 6, 6, 6, 6],\
                [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ,6, 6, 6, 6, 6, 6, 6, 6, 6, 6],\
                [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6],\
                [1, 5, 0, 0, 0, 0, 0, 0, 5, 1 ,5, 0, 0, 0, 0, 0, 3, 5, 1, 6, 6],\
                [1, 0, 1, 1, 0, 1, 1, 1, 0, 1 ,0, 1, 1, 1, 0, 1, 1, 0, 1, 6, 6],\
                [1, 0, 2, 0, 0, 0, 0, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 1, 6, 6],\
                [1, 0, 1, 1, 0, 1, 0, 1, 1, 1 ,1, 1, 0, 1, 0, 1, 1, 0, 1, 6, 6],\
                [1, 0, 0, 0, 0, 1, 0, 0, 0, 1 ,0, 0, 0, 1, 0, 0, 0, 0, 1, 6, 6],\
                [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 6, 6],\
                [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 6, 6],\
                [1, 1, 1, 1, 3, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 6, 6],\
                [1, 0, 0, 0, 5, 0, 0, 0, 0, 0, 5, 1, 0, 0, 5, 0, 0, 0, 1, 6, 6],\
                [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 6, 6],\
                [1, 1, 1, 1, 0, 1, 0, 0, 3, 0, 0, 3, 0, 1, 0, 1, 1, 1, 1, 6, 6],\
                [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 6, 6],\
                [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 1, 6, 6],\
                [1, 5, 1, 1, 0, 1, 1, 1, 5, 1, 5, 1, 1, 1, 0, 1, 1, 5, 1, 6, 6],\
                [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 6, 6],\
                [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 6, 6],\
                [1, 5, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 5, 1, 6, 6],\
                [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 6, 6],\
                [1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 1, 6, 6],\
                [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6]]
        
    def getLayoutHard(self):
        return [[6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ,6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6],\
                [6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ,6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6],\
                [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6],\
                [1, 5, 0, 0, 1, 5, 0, 0, 0, 1 ,0, 0, 0, 0, 0, 0, 0, 5, 1, 6, 6],\
                [1, 0, 1, 0, 1, 1, 1, 1, 0, 1 ,0, 1, 1, 1, 0, 1, 1, 0, 1, 6, 6],\
                [1, 0, 0, 0, 1, 3, 0, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 1, 6, 6],\
                [1, 0, 1, 1, 1, 1, 0, 1, 1, 1 ,0, 1, 0, 1, 1, 1, 1, 1, 1, 6, 6],\
                [1, 3, 0, 0, 0, 0, 0, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 3, 1, 6, 6],\
                [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 6, 6],\
                [1, 0, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 1, 0, 1, 5, 0, 1, 6, 6],\
                [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 6, 6],\
                [1, 0, 3, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 6, 6],\
                [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 6, 6],\
                [1, 0, 5, 1, 0, 1, 0, 1, 0, 1, 5, 1, 0, 1, 0, 1, 3, 1, 1, 6, 6],\
                [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 6, 6],\
                [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 6, 6],\
                [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 6, 6],\
                [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 6, 6],\
                [1, 1, 0, 1, 3, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 6, 6],\
                [1, 2, 0, 1, 5, 1, 5, 0, 0, 1, 0, 0, 3, 1, 5, 0, 0, 0, 1, 6, 6],\
                [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 6, 6],\
                [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 6, 6],\
                [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6]]

    def getLayoutEasy(self):
        return [[6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ,6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6],\
                [6, 6, 6, 6, 6, 6, 6, 6, 6, 6 ,6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6],\
                [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6],\
                [1, 1, 1, 1, 5, 1, 1, 5, 1, 1 ,1, 5, 1, 1, 5, 1, 1, 1, 1, 6, 6],\
                [1, 1, 1, 0, 0, 3, 1, 0, 1, 1 ,1, 0, 1, 3, 0, 5, 1, 1, 1, 6, 6],\
                [1, 1, 0, 0, 1, 0, 1, 0, 1, 1 ,1, 0, 1, 0, 1, 0, 0, 1, 1, 6, 6],\
                [1, 5, 0, 1, 1, 0, 0, 0, 0, 0 ,0, 0, 0, 0, 1, 1, 0, 0, 1, 6, 6],\
                [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 6, 6],\
                [1, 0, 0, 0, 1, 3, 0, 0, 0, 0 ,0, 0, 0, 5, 1, 0, 0, 0, 1, 6, 6],\
                [1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 6, 6],\
                [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 6, 6],\
                [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 6, 6],\
                [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 6, 6],\
                [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 6, 6],\
                [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 6, 6],\
                [1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 6, 6],\
                [1, 0, 0, 0, 1, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 1, 6, 6],\
                [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 6, 6],\
                [1, 5, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 5, 1, 6, 6],\
                [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 6, 6],\
                [1, 1, 1, 0, 0, 2, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 6, 6],\
                [1, 1, 1, 1, 5, 1, 0, 5, 1, 1, 1, 5, 0, 0, 5, 1, 1, 1, 1, 6, 6],\
                [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6]]
    
	#returns images for each number on the board
    def getSprites(self):
        MANPAK, rect = load_icon("manpak.png",-1)
        ORB, rect = load_icon("orb.png",-1)
        BLOCK, rect = load_icon("block.png",-1)
        POWERUP, rect = load_icon("powerup.png",-1)
        BEAST, rect = load_icon("beast.png",-1)
        BEASTSCARED, rect = load_icon("beastscared.png",-1)
        return [ORB,BLOCK,MANPAK,BEAST,BEASTSCARED,POWERUP]
        
